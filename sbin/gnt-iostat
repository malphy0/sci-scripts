#!/bin/bash
workdir="/var/lib/ganeti"
configfile="$workdir/config.data"
configfile_obr=/tmp/config.data.$$
temp_file=/tmp/gnt-iostat.$$

function get_instances {
	cat $configfile_obr | awk -F ':|"|,' 'BEGIN {
			inst=0
		}
		{ 
			if ($0 ~ "instances") {
				inst=1
				nics=0
			}
			if ($0 ~ "networks") inst=0
			if (inst == 1 && $0 ~ "name") {
				printf("%s ",$(NF-2))
			}
			if ($0 ~ "osparams_private") nics=1
			if (inst ==1 && $0 ~ "uuid" && nics == 1) {
				printf ("%s \n",$(NF-1))
				nics=0
				
			}
		}'
}
function get_dguid {
	cat $configfile_obr | awk -F ':|"|,' -v inst_name=$1 -v inst_uuid=$2 'BEGIN {
			this_inst=0
			diskstart=0
		}
		{
			if ($0 ~ "instances") {
                                instan=1
                                nics=0
                        }
			if ($0 ~ "networks") instan=0
			if (instan == 1) {
				if($0 ~ "disks_active" && this_inst==1){
					diskstart=0 
					exit
				}
				if ($0 ~ inst_uuid) this_inst=1
				if($0 ~ "disks" && this_inst==1) diskstart=1
				if(this_inst==1 && diskstart==1 && $0 ~ '/[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}/') printf("%s %s\n",inst_name,$2)
			}
		}'
}
function get_vg {
	cat $configfile_obr | awk -F ':|"|,' -v duid=$2 -v inst_name=$1 '{
		if ($0 ~ duid && $0 !~ "uuid") {
			this_disk=1
		}
		if ($0 ~ duid && $0 ~ "uuid" ) this_disk=0
		if (str_count == 1) {
			str_count=0
			if($0 !~ "_meta") printf ("%s %s %s\n",inst_name,vg,$2)
		}
					
		if (str_count == 2 ) {
			vg=$2
			str_count=1
		}
		if ($0 ~ "dev_type" && $5 == "drbd" && this_disk == 1) this_disk=0
		if (this_disk == 1 && $0 ~ "logical_id") str_count=2
		}'
}
trap ' rm $temp_file; rm $configfile_obr ;exit 1' 2 3 15
cat /var/lib/ganeti/config.data |python -m json.tool > $configfile_obr
get_instances | while read i; do
	get_dguid $i | while read j;do
		get_vg $j
		done
	done |awk '
        {
                printf("%s_",$1)
                split($3,disk,"[._]")
                gsub("-","--", $3)
                printf("%s %s-%s %s\n",disk[2],$2,$3,$4)
        }' > $temp_file
disks_count=$(cat $temp_file | wc -l)
[[ $disks_count == 0 ]] && {
        echo "on this cluster was not found used lvs"
        exit
}
disks_print=$(ls -l /dev/mapper | awk -v filename1="$temp_file" '{
					while ((getline k < filename1)>0){
						split(k,line," ")
						if(line[2] == $9) dc++
						}
					close (filename1)
					} END {
						print dc
					}')
					
iostat -N $* |  awk -v filename="$temp_file" -v disks_print=$disks_print ' {
        while ((getline l < filename)>0){
                        split(l,s," ")
                        if ($1==s[2]) {
                                $1=s[1]
                                gsub(/,/,".")
                                printf("%-30s %12s %12s %12s %12s %12s \n",$1,$2,$3,$4,$5,$6)
				for ( i=2 ; i<=6 ; i++) sum[i]+=$(i)
				disk_printed++
                        }

        }
        close(filename)
        }
	/^avg-cpu/ {
                print $0
	}
	/^[[:space:]]/ {
                print $0
	}
	/^Device/ {
                printf("%-30s %12s %12s %12s %12s %12s \n","Disk:","tps","kB_read/s","kB_wrtn/s","kB_read","kB_wrtn")
                print "==============================================================================================="
        } 
	{	
			if (disks_print == disk_printed) {
			printf("%-30s ", "TOTAL")
                        for ( i=2 ; i<=6; i++ ) {
                                printf("%12s ",sum[i])
                                sum[i]=0
                        }
                        disk_printed=0
                        printf("\n")
		}
	}'

rm $temp_file
rm $configfile_obr
